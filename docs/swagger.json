{
    "openapi": "3.0.0",
    "info": {
        "title": "API Title",
        "description": "API Description",
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "/auth",
            "description": "authentificain"
        },
        {
            "name": "/users",
            "description": "user handling"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "summary": "Login to the system",
                "tags": [
                    "/auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "refreshToken": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed request body validation"
                    },
                    "401": {
                        "description": "Incorrect email or password"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "summary": "Create a new user account",
                "tags": [
                    "/auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful signup",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "refreshToken": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed request body validation"
                    },
                    "403": {
                        "description": "Email already taken"
                    }
                }
            }
        },
        "/refreshToken": {
            "get": {
                "summary": "Refresh the access token",
                "tags": [
                    "/auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful token refresh",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Empty or invalid token"
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "summary": "Logout the user",
                "tags": [
                    "/auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Get user details",
                "tags": [
                    "/users"
                ],
                "description": "Retrieve user details using the provided token.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Empty or invalid token"
                    },
                    "404": {
                        "description": "User not found (user deleted but token valid)"
                    },
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "summary": "Update user details",
                "tags": [
                    "/users"
                ],
                "description": "Update user details using the provided token and request body.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "User details to be updated.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Failed request body validation"
                    },
                    "401": {
                        "description": "Empty or invalid token"
                    },
                    "404": {
                        "description": "User not found (user deleted but token valid)"
                    },
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user account",
                "tags": [
                    "/users"
                ],
                "description": "Delete user account using the provided token.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Empty or invalid token"
                    },
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "otherField": {
                        "type": "string",
                        "example": "Other field value"
                    }
                }
            }
        }
    }
}